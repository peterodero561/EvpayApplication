# Generated by Django 5.1.7 on 2025-04-05 08:26

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('checkout_request_id', models.CharField(max_length=255, unique=True)),
                ('amount', models.FloatField()),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.CharField(default='pending', max_length=50)),
                ('result_code', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('user_name', models.CharField(max_length=150)),
                ('user_role', models.CharField(choices=[('driver', 'Driver'), ('passenger', 'Passenger'), ('manager', 'Manager'), ('admin', 'Admin')], default='passenger', max_length=20)),
                ('user_profile_pic', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('driver_id', models.AutoField(primary_key=True, serialize=False)),
                ('driver_name', models.CharField(max_length=150)),
                ('driver_no', models.CharField(max_length=50)),
                ('driver_email', models.EmailField(max_length=254, unique=True)),
                ('driver_password', models.CharField(max_length=255)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='driver_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Bus',
            fields=[
                ('bus_id', models.AutoField(primary_key=True, serialize=False)),
                ('bus_model', models.CharField(max_length=150)),
                ('bus_battery_model', models.CharField(max_length=150)),
                ('bus_battery_company', models.CharField(max_length=150)),
                ('bus_plate_no', models.CharField(max_length=50, unique=True)),
                ('bus_seat_no', models.IntegerField()),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buses', to='core.driver')),
            ],
        ),
        migrations.CreateModel(
            name='GarageManager',
            fields=[
                ('manager_id', models.AutoField(primary_key=True, serialize=False)),
                ('manager_name', models.CharField(max_length=150)),
                ('manager_email', models.EmailField(max_length=254)),
                ('manager_no', models.CharField(max_length=50)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='garage_manager_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Garage',
            fields=[
                ('gar_id', models.AutoField(primary_key=True, serialize=False)),
                ('gar_name', models.CharField(max_length=150)),
                ('gar_location', models.CharField(max_length=150, unique=True)),
                ('gar_services', models.JSONField(default=dict)),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='garages', to='core.garagemanager')),
            ],
        ),
    ]
